;; -*- mode: emacs-lisp; lexical-binding:t; coding: utf-8-emacs; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Sat Mar 22 18:44:55 2025
;; Desktop file format version 208
;; Emacs version 31.0.50

;; Global section:
(setq desktop-saved-frameset [frameset 1 (26590 63255 183190 594000) (desktop . "208") "leonardo@leonardo" nil nil ((((minibuffer . t) (undecorated) (override-redirect) (font . "-GOOG-Noto Sans Mono-regular-normal-normal-*-13-*-*-*-*-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (child-frame-border-width) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#f6f3e8") (background-color . "#242424") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 0) (tab-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 16) (scroll-bar-height . 16) (alpha) (alpha-background) (no-focus-on-map) (no-accept-focus) (fullscreen . maximized) (visibility . t) (use-frame-synchronization) (skip-taskbar) (z-group) (display-type . color) (background-mode . dark) (cursor-color . "#656565") (font-parameter) (sticky) (shaded) (environment) (last-focus-update . t) (dnd-root-window-position) (frameset--id . "FB9A-2616-66C8-F97D") (frameset--mini t . t) (height . 58) (width . 238) (modeline . t) (unsplittable) (left . 0) (top . 0) (icon-name) (display . ":0") (explicit-name)) ((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 72) (min-pixel-width . 160) (min-pixel-height-ignore . 36) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 18) (min-pixel-width-safe . 32)) hc (pixel-width . 1920) (pixel-height . 1034) (total-width . 240) (total-height . 57) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 1034) (total-width . 120) (total-height . 57) (normal-height . 1.0) (normal-width . 0.5) (buffer "README.org" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 79138) (start . 77466)) (prev-buffers ("*scratch*" 1 1))) (leaf (last . t) (pixel-width . 960) (pixel-height . 1034) (total-width . 120) (total-height . 57) (normal-height . 1.0) (normal-width . 0.5) (buffer "init.el" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 6738) (start . 6444)) (prev-buffers ("*scratch*" 1 1)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '(#("bell" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("scratch" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("custom" 0 6 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/.emacs.d/" "~/kit/emacs-solo/init.el" "~/.emacs.d/README.org"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/home/leonardo/dotfiles/configurations/emacs/README.org"
  "README.org"
  'org-mode
  '(font-lock-mode)
  79138
  '(79143 nil)
  nil
  nil
  '((tab-width . 8) (buffer-display-time 26590 63253 733995 507000) (buffer-file-coding-system . utf-8-dos) (truncate-lines . t))
  '((mark-ring (79020 79053 79024 78790 78743 78455 78120 77957 77952 77583 76709 77219 76228 76223 77219 76228))))

(desktop-create-buffer 208
  "/home/leonardo/kit/emacs-solo/init.el"
  "init.el"
  'emacs-lisp-mode
  '(font-lock-mode eldoc-mode)
  6738
  '(6716 nil)
  nil
  nil
  '((buffer-display-time 26590 63253 733998 300000) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (6621 6567 6160 5855 4292 3935 3781 3136 2898 2866 2789 2451 2175 2150 2078 1615))))

(desktop-create-buffer 208
  "/home/leonardo/binaries/emacs/install/share/emacs/31.0.50/lisp/loaddefs.el"
  "loaddefs.el"
  'emacs-lisp-mode
  '(font-lock-mode eldoc-mode bug-reference-prog-mode)
  7605
  '(nil nil)
  nil
  nil
  '((tab-width . 8) (indent-tabs-mode) (buffer-display-time) (buffer-file-coding-system . utf-8-emacs-unix) (fill-column . 72))
  '((mark-ring nil)))

